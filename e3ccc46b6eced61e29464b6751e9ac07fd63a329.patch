From e3ccc46b6eced61e29464b6751e9ac07fd63a329 Mon Sep 17 00:00:00 2001
From: Sean McBride <sean@rogue-research.com>
Date: Tue, 9 Apr 2024 13:36:02 -0400
Subject: [PATCH] descriptor: Eliminate all duplicate branch bodies, as they
 are bug-prone

Copy-pasting can often result in mistakes like:

```
if (test_value(x)) {
  y++;
  do_something(x, y);
} else {
  y++;
  do_something(x, y);
}
```

Thus it is preferable that branch bodies be unique.

Fixes all clang-tidy bugprone-branch-clone warnings

References #1479
---
 .clang-tidy           | 1 -
 libusb/descriptor.c   | 8 ++------
 libusb/version_nano.h | 2 +-
 3 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/.clang-tidy b/.clang-tidy
index 2cae6be42..dc295d753 100644
--- a/.clang-tidy
+++ b/.clang-tidy
@@ -2,7 +2,6 @@
 Checks: "-*,\
 boost-*,\
 bugprone-*,\
--bugprone-branch-clone,\
 -bugprone-easily-swappable-parameters,\
 -bugprone-misplaced-widening-cast,\
 -bugprone-narrowing-conversions,\
diff --git a/libusb/descriptor.c b/libusb/descriptor.c
index 9d909440c..272ef6347 100644
--- a/libusb/descriptor.c
+++ b/libusb/descriptor.c
@@ -1268,9 +1268,7 @@ int API_EXPORTED libusb_get_string_descriptor_ascii(libusb_device_handle *dev_ha
 	r = libusb_get_string_descriptor(dev_handle, 0, 0, str.buf, 4);
 	if (r < 0)
 		return r;
-	else if (r != 4 || str.desc.bLength < 4)
-		return LIBUSB_ERROR_IO;
-	else if (str.desc.bDescriptorType != LIBUSB_DT_STRING)
+	else if (r != 4 || str.desc.bLength < 4 || str.desc.bDescriptorType != LIBUSB_DT_STRING)
 		return LIBUSB_ERROR_IO;
 	else if (str.desc.bLength & 1)
 		usbi_warn(HANDLE_CTX(dev_handle), "suspicious bLength %u for language ID string descriptor", str.desc.bLength);
@@ -1279,9 +1277,7 @@ int API_EXPORTED libusb_get_string_descriptor_ascii(libusb_device_handle *dev_ha
 	r = libusb_get_string_descriptor(dev_handle, desc_index, langid, str.buf, sizeof(str.buf));
 	if (r < 0)
 		return r;
-	else if (r < DESC_HEADER_LENGTH || str.desc.bLength > r)
-		return LIBUSB_ERROR_IO;
-	else if (str.desc.bDescriptorType != LIBUSB_DT_STRING)
+	else if (r < DESC_HEADER_LENGTH || str.desc.bLength > r || str.desc.bDescriptorType != LIBUSB_DT_STRING)
 		return LIBUSB_ERROR_IO;
 	else if ((str.desc.bLength & 1) || str.desc.bLength != r)
 		usbi_warn(HANDLE_CTX(dev_handle), "suspicious bLength %u for string descriptor (read %d)", str.desc.bLength, r);
diff --git a/libusb/version_nano.h b/libusb/version_nano.h
index 2f0f3e011..a69807443 100644
--- a/libusb/version_nano.h
+++ b/libusb/version_nano.h
@@ -1 +1 @@
-#define LIBUSB_NANO 11922
+#define LIBUSB_NANO 11923
